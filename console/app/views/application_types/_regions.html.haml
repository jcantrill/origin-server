- unless @regions.empty?
  .control-group.control-group-important
    %h3.control-label Region
    .controls.first
      - if @regions.size == 1
        %h3= @regions.first.name
      - else
        - @add_region_description = update_region_descriptions(@regions)
        .input-append
          = f.select :region, @regions.collect{|r|[r.name, {:title=>r.description}]}, :selected=>default_region(@regions)
          - if @add_region_description
            %span#region_desc
            - content_for :javascripts do
              :coffee
                $(document).ready ->
                  $('#region_desc').toggleClass('add-on help-block')
                  set_description = (select) ->
                    title = $('option:selected',select).attr('title')
                    $('#region_desc').html(title)
                    $('#region_desc').toggleClass('italics muted',title == '#{Console::ModelHelper::NO_REGION_DESCRIPTION}')
                  set_description($('#application_region'))
                  $('#application_region').change ->
                    set_description(this)
    .controls
      %p.help-block
        Gears within your application will run on servers in the specified region.
    - if @add_region_description
      .controls
        %noscript
          %div{:style => 'max-height:125px; overflow:scroll'}
            %table.table.table-condensed
              %thead
                %tr
                  %th{:style => 'white-space:nowrap'}
                    Region
                  %th Description
              %tbody
                - @regions.each do |r|
                  %tr
                    %td= r.name
                    %td= r.description
